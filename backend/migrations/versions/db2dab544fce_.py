"""empty message

Revision ID: db2dab544fce
Revises: cecabe5a7d0c
Create Date: 2024-06-21 20:51:15.061740

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import datetime

# revision identifiers, used by Alembic.
revision = 'db2dab544fce'
down_revision = 'cecabe5a7d0c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cards', schema=None) as batch_op:
        batch_op.alter_column('time_created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('time_for_review',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('time_interval',
               existing_type=postgresql.INTERVAL(),
               nullable=True)
        batch_op.alter_column('last_reviewed',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('last_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('reviews_done',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('deck_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.execute(f"UPDATE cards SET time_created = {sa.func.current_timestamp()}")
        batch_op.execute(f"UPDATE cards SET time_for_review = {sa.func.current_timestamp()}")
        batch_op.execute(f"UPDATE cards SET time_interval = '1 day'")
        batch_op.execute(f"UPDATE cards SET last_reviewed = {sa.func.current_timestamp()}")
        batch_op.execute(f"UPDATE cards SET last_modified = {sa.func.current_timestamp()}")
        batch_op.execute(f"UPDATE cards SET reviews_done = 1")
        batch_op.alter_column('time_created',
               nullable=False)
        batch_op.alter_column('time_for_review',
               nullable=False)
        batch_op.alter_column('time_interval',
               nullable=False)
        batch_op.alter_column('last_reviewed',
               nullable=False)
        batch_op.alter_column('last_modified',
               nullable=False)
        batch_op.alter_column('reviews_done',
               nullable=False)
       
        

    with op.batch_alter_table('decks', schema=None) as batch_op:
        batch_op.alter_column('time_created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('last_reviewed',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('last_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('reviews_done',
               existing_type=sa.INTEGER(),
               nullable=True)
        
        batch_op.execute(f"UPDATE decks SET time_created = {sa.func.current_timestamp()}")
        batch_op.execute(f"UPDATE decks SET last_reviewed = {sa.func.current_timestamp()}")
        batch_op.execute(f"UPDATE decks SET last_modified = {sa.func.current_timestamp()}")
        batch_op.execute(f"UPDATE decks SET reviews_done = 1")
        
        batch_op.alter_column('time_created',
               nullable=False)
        batch_op.alter_column('last_reviewed',
               nullable=False)
        batch_op.alter_column('last_modified',
               nullable=False)
        batch_op.alter_column('reviews_done',
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('decks', schema=None) as batch_op:
        batch_op.alter_column('reviews_done',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('last_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('last_reviewed',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('time_created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('cards', schema=None) as batch_op:
        batch_op.alter_column('deck_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('reviews_done',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('last_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('last_reviewed',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('time_interval',
               existing_type=postgresql.INTERVAL(),
               nullable=True)
        batch_op.alter_column('time_for_review',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('time_created',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    # ### end Alembic commands ###
